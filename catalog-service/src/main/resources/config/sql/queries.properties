getPurchasedQuantityByProductId = select pv.product_vendor_id, pv.purchased_quantity from product_to_vendor_mapper ptvm inner join product_vendor pv on ptvm.product_vendor_id = pv.product_vendor_id where ptvm.product_id= :productId
listProductImagesByProduct = select pi.product_image_id, pi.image_name, pi.imageurl from product_image pi where pi.product_id = :productId
listIsProductSoldByProduct = select si.stock_item_id, si.is_product_sold from stock_item si where si.product_id = :productId
deleteItemStockByProduct = delete from stock_item si where si.product_id = :productId
listUnsoldActiveStockItems = select si.stock_item_id, si.purchased_on, si.purchased_price, si.vendor_id from stock_item si where si.product_id=:productId and si.is_product_sold=false and si.is_product_active=true order by purchased_price asc limit :quantity
updateIsProductSoldInStock = update stock_item set is_product_sold = ? where stock_item_id = ?
isStockItemListExist = select count(si.stock_item_id) from stock_item si where si.stock_item_id in (:stockItems)
listProductIdByStockItem = select distinct si.product_id from stock_item si where si.stock_item_id in (:stockItems)
listIsProductSoldByStockItems = select si.stock_item_id, si.is_product_sold from stock_item si where si.stock_item_id in (:stockItems)
listStockItems = select si.stock_item_id, si.is_product_active, si.is_product_returned_to_vendor, si.is_product_sold, si.purchased_on, si.purchased_price, p.product_id, p.product_name, p.product_price, p.discount, p.is_product_on_rent, v.vendor_id, v.vendor_name, v.vendor_contact from stock_item si inner join vendor v on v.vendor_id=si.vendor_id inner join product p on p.product_id=si.product_id where si.product_id is not null 
listDrafts =  select d.draft_id, d.customer_id, pind.products_in_draft_id,  pind.quantity, p.product_id, p.product_name, p.product_price, p.discount, p.remarks, p.is_product_on_rent, p.rental_book_id, rb.depreciation as rental_book_depreciation, p.rental_set_id, rbs.depreciation as rental_book_set_depreciation, p.book_id, p.set_id, p.max_day_for_return, c.category from draft d inner join products_in_draft pind on d.draft_id=pind.draft_id inner join product p on p.product_id=pind.product_id left join rental_book_set rbs on rbs.rental_set_id = p.rental_set_id left join rental_book rb on rb.rental_book_id = p.rental_book_id inner join category c on c.category_id=p.category_id
getProductIdByStock = select si.product_id from stock_item si where si.stock_item_id = :stockItemId
listPImagesByPIds = select pi.product_image_id, pi.image_name, pi.imageurl, pi.product_id from product_image pi where pi.product_id in (:productIds)
listAllRentalBookProducts = select p.product_id, p.discount, p.is_product_on_rent, p.max_day_for_return, p.product_name, p.product_price, p.remarks, p.rental_book_id, p.quantity, p.reserve_quantity, convert_from(loread(lo_open(rb.long_description::int, x'40000'::int), x'40000'::int), 'UTF8') as long_description, rb.author, rb.depreciation, rb.publisher, rb.contributor, rb.editor, rb.illustrator, rb.isbn, rb.language, rb.publication_date, rb.publisher_city, rb.reviewer, rb.short_description, rb.short_title, rb.subtitle, rb.tag_line, rb.title, rb.translator, pimg.product_image_id,pimg.image_name, pimg.imageurl, c.category_id, c.category from product p left join rental_book rb on rb.rental_book_id = p.rental_book_id left join product_image pimg on pimg.product_id = p.product_id left join category c on c.category_id = p.category_id where p.rental_book_id is not null
listAllBookSetProducts = select p.product_id, p.discount, p.is_product_on_rent, p.max_day_for_return, p.product_name, p.product_price, p.remarks, p.set_id, p.quantity, p.reserve_quantity, bs.semester, u.university_id, u.university_name, bsi.set_item_id, convert_from(loread(lo_open(bsi.long_description::int, x'40000'::int), x'40000'::int), 'UTF8') as long_description, bsi.author, bsi.publisher, bsi.contributor, bsi.editor, bsi.illustrator, bsi.isbn, bsi.language, bsi.publication_date, bsi.publisher_city, bsi.reviewer, bsi.short_description, bsi.short_title, bsi.subtitle, bsi.tag_line, bsi.title, bsi.translator, co.course_id, co.course_name, pimg.product_image_id, pimg.image_name, pimg.imageurl, c.category_id, c.category from product p left join book_set bs on bs.set_id = p.set_id inner join book_set_item bsi on bsi.set_id = bs.set_id left join product_image pimg on pimg.product_id = p.product_id left join category c on c.category_id = p.category_id inner join book_set_to_course_mapper bstocm on bstocm.set_id = bs.set_id inner join course co on co.course_id = bstocm.course_id inner join university u on u.university_id = bs.university_id where p.set_id is not null
listAllRentalBookSetProducts = select p.product_id, p.discount, p.is_product_on_rent, p.max_day_for_return, p.product_name, p.product_price, p.remarks, p.rental_set_id, p.quantity, p.reserve_quantity, rbs.semester, rbs.depreciation, u.university_id, u.university_name, rbsi.rental_set_item_id, convert_from(loread(lo_open(rbsi.long_description::int, x'40000'::int), x'40000'::int), 'UTF8') as long_description, rbsi.author, rbsi.publisher, rbsi.contributor, rbsi.editor, rbsi.illustrator, rbsi.isbn, rbsi.language, rbsi.publication_date, rbsi.publisher_city, rbsi.reviewer, rbsi.short_description, rbsi.short_title, rbsi.subtitle, rbsi.tag_line, rbsi.title, rbsi.translator, co.course_id, co.course_name, pimg.product_image_id, pimg.image_name, pimg.imageurl, c.category_id, c.category from product p left join rental_book_set rbs on rbs.rental_set_id = p.rental_set_id inner join rental_book_set_item rbsi on rbsi.rental_set_id = rbs.rental_set_id left join product_image pimg on pimg.product_id = p.product_id left join category c on c.category_id = p.category_id inner join rental_book_set_to_course_mapper rbstocm on rbstocm.rental_set_id = rbs.rental_set_id inner join course co on co.course_id = rbstocm.course_id inner join university u on u.university_id = rbs.university_id where p.rental_set_id is not null
listAllBookProducts = select p.product_id, p.discount, p.is_product_on_rent, p.max_day_for_return, p.product_name, p.product_price, p.remarks, p.quantity, p.reserve_quantity, b.book_id, convert_from(loread(lo_open(b.long_description::int, x'40000'::int), x'40000'::int), 'UTF8') as long_description, b.author, b.publisher, b.contributor, b.editor, b.illustrator, b.isbn, b.language, b.publication_date, b.publisher_city, b.reviewer, b.short_description, b.short_title, b.subtitle, b.tag_line, b.title, b.translator, pimg.product_image_id,pimg.image_name, pimg.imageurl, c.category_id, c.category from product p left join book b on b.book_id = p.book_id left join product_image pimg on pimg.product_id = p.product_id left join category c on c.category_id = p.category_id where p.book_id is not null