listAllCustomerOrders = select co.order_number, co.customer_id, co.final_amount, co.is_amount_paid, co.order_status, co.ordered_date, co.payment_id_no, co.payment_mode, co.payment_order_number, co.delivered_on, co.received_on, co.shipped_on, co.shipping_charge, co.rrn, co.payment_status, co.payment_error_step, co.payment_error_source, co.payment_error_reason, co.payment_error_description, co.payment_error_code, co.bank_transaction_id, co.auth_code, co.upi_transaction_id, co.billing_address, co.shipping_address, sp.sold_product_id, sp.discount, sp.max_day_for_return, sp.is_product_on_rent, sp.product_id, sp.sell_price, sp.product_name, sp.remarks, sp.is_return_request_open, sp.is_product_returned from customer_order co inner join sold_product sp on sp.order_number = co.order_number where co.order_number is not null
listAllRentalProducts = select co.order_number, co.customer_id, co.ordered_date, sp.sold_product_id, sp.discount, sp.product_id, sp.product_name, sp.remarks, sp.sell_price, rp.rental_product_id, rp.delay_charge, rp.depreciation, rp.due_date, rp.initial_return_period, rp.refund_amount, rp.deposite, rp.rental_charge, rp.is_eligible_for_return, rp.is_period_extended, rp.rent_period, rp.rented_on, rp.extended_on, rp.is_locked, rp.lock_reason, rp.extended_rent_period, rp.extended_rental_charge from customer_order co inner join sold_product sp on sp.order_number = co.order_number left join rental_product rp on rp.sold_product_id = sp.sold_product_id where rp.rental_product_id is not null
getSoldProductForReturn = SELECT sp.sold_product_id, sp.order_number, sp.is_product_returned, sp.is_return_request_open, sp.sell_price, sp.discount, sp.is_product_on_rent, sp.max_day_for_return from sold_product sp where sp.sold_product_id = :soldProductId
getRentalProductDetails = SELECT rp.delay_charge, rp.refund_amount, rp.deposite, rp.is_eligible_for_return from rental_product rp where rp.sold_product_id = :soldProductId and rp.is_period_extended = false
listAllReturnRequests = select rq.return_request_id, rq.customer_id, rq.is_amount_paid_to_customer, rq.requested_on, rq.refund_amount, rq.return_status, rq.return_type, rq.sold_product_id, sp.is_product_on_rent, sp.product_id, sp.product_name, sp.order_number from return_request rq inner join sold_product sp on sp.sold_product_id = rq.sold_product_id where rq.return_request_id is not null
countProductsByOrder = select product_id, count(product_id) as buy_quantity from sold_product where order_number in (:orderNumberList) group by product_id
deleteSoldProductByOrder = delete from sold_product where order_number in (:orderNumberList)
listAllCustomerOrdersForAdmin = select co.order_number, co.customer_id, co.final_amount, co.is_amount_paid, co.order_status, co.ordered_date, co.payment_id_no, co.payment_mode, co.payment_order_number, co.delivered_on, co.received_on, co.shipped_on, co.shipping_charge, co.rrn, co.payment_status, co.payment_error_step, co.payment_error_source, co.payment_error_reason, co.payment_error_description, co.payment_error_code, co.bank_transaction_id, co.auth_code, co.upi_transaction_id, co.billing_address, co.shipping_address, sp.sold_product_id, sp.discount, sp.max_day_for_return, sp.is_product_on_rent, sp.product_id, sp.sell_price, sp.product_name, sp.remarks, sp.is_return_request_open, sp.is_product_returned, sp.purchased_on, sp.purchased_price, sp.purchased_from, sp.stock_item_id from customer_order co inner join sold_product sp on sp.order_number = co.order_number where co.order_number is not null
getRentalProductById = select delay_charge, depreciation, initial_return_period, rented_on, is_eligible_for_return, is_period_extended, refund_amount, deposite, sold_product_id, order_number, due_date, rental_charge, rent_period, is_locked, lock_reason, extended_rent_period, extended_rental_charge from rental_product where rental_product_id = :rentalProductId
makeEntryInRentalProduct = insert into rental_product (rental_product_id, delay_charge, depreciation, due_date, initial_return_period, is_eligible_for_return, is_period_extended, refund_amount, deposite, rent_period, rental_charge, rented_on, order_number, sold_product_id, is_locked, lock_reason, extended_rent_period, extended_rental_charge) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
listAllRentalProductsForAdmin = select co.order_number, co.customer_id, co.ordered_date, sp.sold_product_id, sp.discount, sp.product_id, sp.product_name, sp.remarks, sp.sell_price, sp.stock_item_id, sp.purchased_from, sp.purchased_on, sp.purchased_price, rp.rental_product_id, rp.delay_charge, rp.depreciation, rp.due_date, rp.initial_return_period, rp.refund_amount, rp.rental_charge, rp.is_eligible_for_return, rp.is_period_extended, rp.rent_period, rp.rented_on, rp.extended_on, rp.is_locked, rp.lock_reason, rp.extended_rent_period, rp.extended_rental_charge from customer_order co inner join sold_product sp on sp.order_number = co.order_number left join rental_product rp on rp.sold_product_id = sp.sold_product_id where rp.rental_product_id is not null
getOrderInfoById = select distinct (p.product_id), t.quantity, p.product_name, p.sell_price, p.discount, p.sell_price * (1 - (p.discount/100)) as net_price, co.order_number, co.received_on, co.shipped_on, co.delivered_on, co.shipping_charge, co.customer_id, co.payment_mode from (select product_id, count(product_id) as quantity from sold_product where order_number = :orderNumber group by product_id) t join sold_product p on p.product_id = t.product_id and order_number = :orderNumber inner join customer_order co on co.order_number = p.order_number
getStockAndProductBySoldProduct = select sp.product_id, sp.stock_item_id from sold_product sp where sp.sold_product_id = :soldProductId
getSoldProductByReturnRequest = select rr.sold_product_id from return_request rr where rr.return_request_id = :returnRequestId ::uuid
listDelayedRentalItems = select DATE_PART('day', CURRENT_DATE ::timestamp - due_date::timestamp) as due_days, rental_product_id, rental_charge, rent_period, refund_amount, deposite, delay_charge  from rental_product as rp where rp.is_eligible_for_return = true and is_locked = false and DATE_PART('day', CURRENT_DATE ::timestamp - due_date::timestamp) > 0
updateRentalProductDelayedCharges = update rental_product set delay_charge = ?, is_eligible_for_return = ?, refund_amount = ? where rental_product_id = ?